name: Build PHP for Windows
on:
  workflow_dispatch:
    inputs:
      php_version:
        description: 'PHP version'
        default: '8.3'
      extensions:
        description: 'Comma-separated extensions'
        default: 'ftp,mbstring,tokenizer,openssl,curl,zip,pdo,pdo_sqlite,xml,simplexml,dom'
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Visual C++ Redistributable
        run: |
          choco install vcredist140 -y
        shell: cmd
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git make autoconf automake libtool pkg-config nasm mingw-w64-x86_64-gcc mingw-w64-x86_64-openssl mingw-w64-x86_64-libxml2 mingw-w64-x86_64-libzip mingw-w64-x86_64-libpng mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-freetype mingw-w64-x86_64-curl mingw-w64-x86_64-oniguruma mingw-w64-x86_64-libwebp mingw-w64-x86_64-libssh2 mingw-w64-x86_64-nghttp2 mingw-w64-x86_64-xz unzip curl
      - name: Install PHP for MSYS2
        run: |
          printf 'Checking curl availability in MSYS2:\n'
          curl --version || (echo "curl not found in MSYS2" && exit 1)
          curl -L -o /tmp/php.zip https://windows.php.net/downloads/releases/archives/php-8.3.0-nts-Win32-vs16-x64.zip
          printf 'Checking if php.zip exists:\n'
          ls -l /tmp/php.zip
          printf 'Checking if php.zip is valid:\n'
          file /tmp/php.zip
          unzip /tmp/php.zip -d /mingw64
          printf 'Checking if php.exe exists:\n'
          ls -l /mingw64/php.exe
          printf 'Creating extension directory:\n'
          mkdir -p /mingw64/ext
          printf 'Copying all DLLs to extension directory:\n'
          mv /mingw64/*.dll /mingw64/ext/ 2>/dev/null || printf 'No DLLs found in /mingw64\n'
          printf 'Listing extension directory contents:\n'
          ls -l /mingw64/ext
          printf 'Creating php.ini:\n'
          printf 'extension=openssl\n' > /mingw64/php.ini
          printf 'extension=ftp\n' >> /mingw64/php.ini
          printf 'extension_dir=/mingw64/ext\n' >> /mingw64/php.ini
          printf 'Checking /mingw64/bin permissions:\n'
          ls -ld /mingw64/bin
          printf 'Copying php.exe and php.ini to /mingw64/bin:\n'
          cp /mingw64/php.exe /mingw64/bin/php.exe
          cp /mingw64/php.ini /mingw64/bin/php.ini
          printf 'Checking if php.exe exists in /mingw64/bin:\n'
          ls -l /mingw64/bin/php.exe
          printf 'PHP installed at /mingw64/bin/php.exe\n'
          cmd /c "D:\\a\\_temp\\msys64\\mingw64\\bin\\php.exe" --version
        shell: msys2 {0}
      - name: Debug MSYS2 Environment
        run: |
          printf 'Checking directory permissions:\n'
          mkdir -p /usr/local/bin
          ls -ld /usr/local/bin
          printf 'Checking curl version:\n'
          /mingw64/bin/curl.exe --version
          printf 'Checking PHP availability:\n'
          cmd /c "D:\\a\\_temp\\msys64\\mingw64\\bin\\php.exe" --version
          printf 'Checking PHP extensions:\n'
          cmd /c "D:\\a\\_temp\\msys64\\mingw64\\bin\\php.exe" -m
          printf 'Checking extension directory contents:\n'
          ls -l /mingw64/ext
        shell: msys2 {0}
      - name: Install Composer
        run: |
          printf 'Downloading Composer directly...\n'
          curl -sS https://getcomposer.org/composer.phar -o /mingw64/bin/composer
          chmod +x /mingw64/bin/composer
          
          printf 'Verifying Composer...\n'
          cmd /c "D:\a\_temp\msys64\mingw64\bin\php.exe" /mingw64/bin/composer --version
        shell: msys2 {0}
      - name: Download PHP sources
        run: |
          /mingw64/bin/composer config -g secure-http false
          /mingw64/bin/composer install --no-interaction --prefer-dist
          ./bin/spc download --clean
          ./bin/spc download --with-php=${{ github.event.inputs.php_version }} --for-extensions "${{ github.event.inputs.extensions }}"
        shell: msys2 {0}
      - name: Build PHP
        run: |
          ./bin/spc build --build-cli --build-embed "${{ github.event.inputs.extensions }}"
        shell: msys2 {0}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-windows
          path: bin/php.exe
