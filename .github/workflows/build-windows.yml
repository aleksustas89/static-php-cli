name: Build PHP for Windows

on:
  workflow_dispatch:
    inputs:
      php_version:
        description: 'PHP version'
        default: '8.3'
      extensions:
        description: 'Comma-separated extensions'
        default: 'ftp,mbstring,tokenizer,openssl,curl,zip,pdo,pdo_sqlite,xml,simplexml,dom'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git make autoconf automake libtool pkg-config nasm mingw-w64-x86_64-gcc \
                   mingw-w64-x86_64-openssl mingw-w64-x86_64-libxml2 mingw-w64-x86_64-libzip \
                   mingw-w64-x86_64-libpng mingw-w64-x86_64-libjpeg-turbo mingw-w64-x86_64-freetype \
                   mingw-w64-x86_64-curl mingw-w64-x86_64-oniguruma mingw-w64-x86_64-libwebp \
                   mingw-w64-x86_64-libssh2 mingw-w64-x86_64-nghttp2 mingw-w64-x86_64-xz unzip
        shell: bash

      - name: Download and extract PHP
        shell: bash
        run: |
          curl -L -o /tmp/php.zip https://windows.php.net/downloads/releases/archives/php-${{ github.event.inputs.php_version }}-nts-Win32-vs16-x64.zip
          unzip /tmp/php.zip -d /mingw64
          mkdir -p /mingw64/ext
          mv /mingw64/*.dll /mingw64/ext/ 2>/dev/null || echo "No DLLs to move"
          echo "extension_dir=/mingw64/ext" > /mingw64/php.ini
          for ext in $(echo "${{ github.event.inputs.extensions }}" | tr "," "\n"); do
            echo "extension=$ext" >> /mingw64/php.ini
          done
          /mingw64/php.exe --version
          /mingw64/php.exe -m

      - name: Install Composer
        shell: bash
        run: |
          curl -sS https://getcomposer.org/composer.phar -o /usr/local/bin/composer
          chmod +x /usr/local/bin/composer
          composer --version

      - name: Download PHP sources for static build
        shell: bash
        run: |
          ./bin/spc download --clean
          ./bin/spc download --with-php=${{ github.event.inputs.php_version }} --for-extensions "${{ github.event.inputs.extensions }}"

      - name: Build PHP
        shell: bash
        run: |
          ./bin/spc build --build-cli --build-embed "${{ github.event.inputs.extensions }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-windows
          path: bin/php.exe
