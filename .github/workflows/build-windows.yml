name: Build PHP for Windows
on:
  workflow_dispatch:
    inputs:
      php_version:
        description: 'PHP version'
        default: '8.3'
      extensions:
        description: 'Comma-separated extensions'
        default: 'ftp,mbstring,tokenizer,openssl,curl,zip,pdo,pdo_sqlite,xml,simplexml,dom'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: curl, mbstring, openssl
          tools: composer

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >
            git make autoconf automake libtool pkg-config nasm 
            mingw-w64-x86_64-gcc 
            mingw-w64-x86_64-openssl 
            mingw-w64-x86_64-libxml2 
            mingw-w64-x86_64-libzip 
            mingw-w64-x86_64-curl 
            mingw-w64-x86_64-oniguruma 
            mingw-w64-x86_64-xz
            tar
            unzip

      - name: Install PHP SDK Tools
        run: |
          echo "Installing php-sdk-binary-tools..."
          curl -L -o php-sdk.zip https://github.com/microsoft/php-sdk-binary-tools/archive/refs/heads/master.zip
          unzip php-sdk.zip -d php-sdk-binary-tools
          mv php-sdk-binary-tools/php-sdk-binary-tools-master/* php-sdk-binary-tools/
          rm -rf php-sdk-binary-tools/php-sdk-binary-tools-master
          echo "PHP SDK tools installed:"
          ls -la php-sdk-binary-tools/bin/
        shell: bash

      - name: Create directories
        run: mkdir -p source/php-src downloads buildroot
        shell: bash

      - name: Download PHP sources
        run: |
          ./bin/spc download --with-php=${{ github.event.inputs.php_version }} --for-extensions "${{ github.event.inputs.extensions }}"
        shell: bash

      - name: Manual PHP extraction
        run: |
          echo "Manually extracting PHP source..."
          
          # Проверяем что архив существует
          if [ ! -f "downloads/php-8.3.25.tar.xz" ]; then
            echo "ERROR: PHP archive not found!"
            exit 1
          fi
          
          # Очищаем старую директорию
          rm -rf source/php-src
          mkdir -p source/php-src
          
          # Распаковываем вручную
          echo "Extracting with tar..."
          tar -xf downloads/php-8.3.25.tar.xz -C source/php-src --strip-components=1
          
          # Проверяем что распаковалось
          echo "Verifying extraction..."
          ls -la source/php-src/
          if [ -f "source/php-src/main/php_version.h" ]; then
            echo "SUCCESS: PHP source extracted successfully!"
          else
            echo "ERROR: PHP source extraction failed!"
            exit 1
          fi
        shell: bash

      - name: Build static PHP
        run: |
          ./bin/spc build --build-cli --build-embed "${{ github.event.inputs.extensions }}"
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-windows
          path: bin/php.exe
